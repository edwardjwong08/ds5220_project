source("~/DS 5220/Assignments/Assignment7/assignment7-7.R")
source("~/DS 5220/Assignments/Assignment7/assignment7-7.R")
nrow(Weekly)
source("~/DS 5220/Assignments/Assignment7/assignment7-7.R")
source("~/DS 5220/Assignments/Assignment7/assignment7-7.R")
head(Weekly)
source("~/DS 5220/Assignments/Assignment7/assignment7-7.R")
pred
prob
seq(1:5)
source("~/DS 5220/Assignments/Assignment7/assignment7-7.R")
source("~/DS 5220/Assignments/Assignment7/assignment7-7.R")
Weekly[1:100,]
source("~/DS 5220/Assignments/Assignment7/assignment7-7.R")
source("~/DS 5220/Course Notes/multicollinearity.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Course Notes/lasso-2-27.R")
source("~/DS 5220/Assignments/Assignment7/assignment7-5.R")
source("~/DS 5220/Assignments/Assignment7/assignment7-6.R")
source("~/DS 5220/Assignments/Assignment7/assignment7-6.R")
source("~/DS 5220/Assignments/Assignment7/assignment7-7.R")
install.packages("Loomis")
?Loomis
?loomis
install.packages("loomis")
install.packages("COUNT")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
version
source("//wsl.localhost/Ubuntu-24.04/home/ryan-houseman/git-repos-ds5220/ds5220_project/analysis/logistic_regression.R")
setwd("//wsl.localhost/Ubuntu-24.04/home/ryan-houseman/git-repos-ds5220/ds5220_project/data")
source("//wsl.localhost/Ubuntu-24.04/home/ryan-houseman/git-repos-ds5220/ds5220_project/analysis/logistic_regression.R")
source("~/DS 5220/Course Notes/mlp.R")
X
source("~/DS 5220/Course Notes/mlp.R")
X
mean(X[,1])
mean(X[,2])
mean(X[1,])
source("~/DS 5220/Course Notes/mlp.R")
source("~/DS 5220/Course Notes/mlp.R")
source("~/DS 5220/Course Notes/mlp.R")
source("~/DS 5220/Course Notes/mlp.R")
m=10
n <- nrow(X)
p <- ncol(X)
phi <- function(z) 1/(1+exp(-z))
g <- function(z) phi(z)
gp <- function(z) {
s <- phi(z)
s*(1-s)
}
beta0 <- 0
vbeta <- rnorm(m,0,sigma)
sigma=0.25
n <- nrow(X)
p <- ncol(X)
phi <- function(z) 1/(1+exp(-z))
g <- function(z) phi(z)
gp <- function(z) {
s <- phi(z)
s*(1-s)
}
beta0 <- 0
vbeta <- rnorm(m,0,sigma)
vtheta0 <- rnorm(m,0,sigma)
Theta <- matrix(rnorm(m*p),m,p)
dTheta <- matrix(0,m,p)
yhat <- rep(0,n)
for (it in 1:maxit) {
for (ct in 1:n) {
i <- sample.int(n,1)
y <- Y[i]
x <- X[i,]
# Compute forward part
linx <- vtheta0+rowSums(sweep(Theta,2,x,"*"))
h <- g(linx)
yhat[i] <- phi(beta0+sum(vbeta*h))
dTheta <- matrix()
# Compute backward part
dbeta0 <- yhat[i]-y
dvbeta <- dbeta0*h
dvtheta0 <- dbeta0*gp(linx)*vbeta
# commented out because this can be computed in a matrix in one line
for(k in 1:m) {
dTheta[k,] <- dbeta0*beta[k]*gp(linx[k])*x
}
#dTheta <- sweep(X,1,dbeta0*beta*gp(linx),"*")
beta0 <- beta0-alp*dbeta0
vbeta <- vbeta-alp*dvbeta
vtheta0 <- vtheta0-alp*dvtheta0
Theta <- Theta-alp*dTheta
}
}
maxit=1e4
alp=0.1
n <- nrow(X)
p <- ncol(X)
phi <- function(z) 1/(1+exp(-z))
g <- function(z) phi(z)
gp <- function(z) {
s <- phi(z)
s*(1-s)
}
beta0 <- 0
vbeta <- rnorm(m,0,sigma)
vtheta0 <- rnorm(m,0,sigma)
Theta <- matrix(rnorm(m*p),m,p)
dTheta <- matrix(0,m,p)
yhat <- rep(0,n)
for (it in 1:maxit) {
for (ct in 1:n) {
i <- sample.int(n,1)
y <- Y[i]
x <- X[i,]
# Compute forward part
linx <- vtheta0+rowSums(sweep(Theta,2,x,"*"))
h <- g(linx)
yhat[i] <- phi(beta0+sum(vbeta*h))
dTheta <- matrix()
# Compute backward part
dbeta0 <- yhat[i]-y
dvbeta <- dbeta0*h
dvtheta0 <- dbeta0*gp(linx)*vbeta
# commented out because this can be computed in a matrix in one line
for(k in 1:m) {
dTheta[k,] <- dbeta0*beta[k]*gp(linx[k])*x
}
#dTheta <- sweep(X,1,dbeta0*beta*gp(linx),"*")
beta0 <- beta0-alp*dbeta0
vbeta <- vbeta-alp*dvbeta
vtheta0 <- vtheta0-alp*dvtheta0
Theta <- Theta-alp*dTheta
}
}
Y <- rbinom(n,1,0.5)
n <- nrow(X)
p <- ncol(X)
phi <- function(z) 1/(1+exp(-z))
g <- function(z) phi(z)
gp <- function(z) {
s <- phi(z)
s*(1-s)
}
beta0 <- 0
vbeta <- rnorm(m,0,sigma)
vtheta0 <- rnorm(m,0,sigma)
Theta <- matrix(rnorm(m*p),m,p)
dTheta <- matrix(0,m,p)
yhat <- rep(0,n)
for (it in 1:maxit) {
for (ct in 1:n) {
i <- sample.int(n,1)
y <- Y[i]
x <- X[i,]
# Compute forward part
linx <- vtheta0+rowSums(sweep(Theta,2,x,"*"))
h <- g(linx)
yhat[i] <- phi(beta0+sum(vbeta*h))
dTheta <- matrix()
# Compute backward part
dbeta0 <- yhat[i]-y
dvbeta <- dbeta0*h
dvtheta0 <- dbeta0*gp(linx)*vbeta
# commented out because this can be computed in a matrix in one line
for(k in 1:m) {
dTheta[k,] <- dbeta0*beta[k]*gp(linx[k])*x
}
#dTheta <- sweep(X,1,dbeta0*beta*gp(linx),"*")
beta0 <- beta0-alp*dbeta0
vbeta <- vbeta-alp*dvbeta
vtheta0 <- vtheta0-alp*dvtheta0
Theta <- Theta-alp*dTheta
}
}
n <- nrow(X)
p <- ncol(X)
phi <- function(z) 1/(1+exp(-z))
g <- function(z) phi(z)
gp <- function(z) {
s <- phi(z)
s*(1-s)
}
beta0 <- 0
vbeta <- rnorm(m,0,sigma)
vtheta0 <- rnorm(m,0,sigma)
Theta <- matrix(rnorm(m*p),m,p)
dTheta <- matrix(0,m,p)
yhat <- rep(0,n)
for (it in 1:maxit) {
for (ct in 1:n) {
i <- sample.int(n,1)
y <- Y[i]
x <- X[i,]
# Compute forward part
linx <- vtheta0+rowSums(sweep(Theta,2,x,"*"))
h <- g(linx)
yhat[i] <- phi(beta0+sum(vbeta*h))
dTheta <- matrix()
# Compute backward part
dbeta0 <- yhat[i]-y
dvbeta <- dbeta0*h
dvtheta0 <- dbeta0*gp(linx)*vbeta
# commented out because this can be computed in a matrix in one line
for(k in 1:m) {
dTheta[k,] <- dbeta0*vbeta[k]*gp(linx[k])*x
}
#dTheta <- sweep(X,1,dbeta0*beta*gp(linx),"*")
beta0 <- beta0-alp*dbeta0
vbeta <- vbeta-alp*dvbeta
vtheta0 <- vtheta0-alp*dvtheta0
Theta <- Theta-alp*dTheta
}
}
n <- nrow(X)
p <- ncol(X)
phi <- function(z) 1/(1+exp(-z))
g <- function(z) phi(z)
gp <- function(z) {
s <- phi(z)
s*(1-s)
}
beta0 <- 0
vbeta <- rnorm(m,0,sigma)
vtheta0 <- rnorm(m,0,sigma)
Theta <- matrix(rnorm(m*p),m,p)
dTheta <- matrix(0,m,p)
yhat <- rep(0,n)
for (it in 1:maxit) {
for (ct in 1:n) {
i <- sample.int(n,1)
y <- Y[i]
x <- X[i,]
# Compute forward part
linx <- vtheta0+rowSums(sweep(Theta,2,x,"*"))
h <- g(linx)
yhat[i] <- phi(beta0+sum(vbeta*h))
dTheta <- matrix()
# Compute backward part
dbeta0 <- yhat[i]-y
dvbeta <- dbeta0*h
dvtheta0 <- dbeta0*gp(linx)*vbeta
# commented out because this can be computed in a matrix in one line
for(k in 1:m) {
dTheta[k,] <- dbeta0*vbeta[k]*gp(linx[k])*x
}
#dTheta <- sweep(X,1,dbeta0*beta*gp(linx),"*")
beta0 <- beta0-alp*dbeta0
vbeta <- vbeta-alp*dvbeta
vtheta0 <- vtheta0-alp*dvtheta0
Theta <- Theta-alp*dTheta
}
}
dbeta0
vbeta[k]
gp(linx[k])
x
dTheta
n <- nrow(X)
p <- ncol(X)
phi <- function(z) 1/(1+exp(-z))
g <- function(z) phi(z)
gp <- function(z) {
s <- phi(z)
s*(1-s)
}
beta0 <- 0
vbeta <- rnorm(m,0,sigma)
vtheta0 <- rnorm(m,0,sigma)
Theta <- matrix(rnorm(m*p),m,p)
dTheta <- matrix(0,m,p)
yhat <- rep(0,n)
for (it in 1:maxit) {
for (ct in 1:n) {
i <- sample.int(n,1)
y <- Y[i]
x <- X[i,]
# Compute forward part
linx <- vtheta0+rowSums(sweep(Theta,2,x,"*"))
h <- g(linx)
yhat[i] <- phi(beta0+sum(vbeta*h))
# Compute backward part
dbeta0 <- yhat[i]-y
dvbeta <- dbeta0*h
dvtheta0 <- dbeta0*gp(linx)*vbeta
# commented out because this can be computed in a matrix in one line
for(k in 1:m) {
dTheta[k,] <- dbeta0*vbeta[k]*gp(linx[k])*x
}
#dTheta <- sweep(X,1,dbeta0*beta*gp(linx),"*")
beta0 <- beta0-alp*dbeta0
vbeta <- vbeta-alp*dvbeta
vtheta0 <- vtheta0-alp*dvtheta0
Theta <- Theta-alp*dTheta
}
}
maxit=1e3
maxit=1e3
n <- nrow(X)
p <- ncol(X)
phi <- function(z) 1/(1+exp(-z))
g <- function(z) phi(z)
gp <- function(z) {
s <- phi(z)
s*(1-s)
}
beta0 <- 0
vbeta <- rnorm(m,0,sigma)
vtheta0 <- rnorm(m,0,sigma)
Theta <- matrix(rnorm(m*p),m,p)
dTheta <- matrix(0,m,p)
yhat <- rep(0,n)
for (it in 1:maxit) {
for (ct in 1:n) {
i <- sample.int(n,1)
y <- Y[i]
x <- X[i,]
# Compute forward part
linx <- vtheta0+rowSums(sweep(Theta,2,x,"*"))
h <- g(linx)
yhat[i] <- phi(beta0+sum(vbeta*h))
# Compute backward part
dbeta0 <- yhat[i]-y
dvbeta <- dbeta0*h
dvtheta0 <- dbeta0*gp(linx)*vbeta
# commented out because this can be computed in a matrix in one line
for(k in 1:m) {
dTheta[k,] <- dbeta0*vbeta[k]*gp(linx[k])*x
}
#dTheta <- sweep(X,1,dbeta0*beta*gp(linx),"*")
beta0 <- beta0-alp*dbeta0
vbeta <- vbeta-alp*dvbeta
vtheta0 <- vtheta0-alp*dvtheta0
Theta <- Theta-alp*dTheta
}
}
list(yhat=yhat,beta0=beta0,vbeta=vbeta,vtheta0=vtheta0,Theta=Theta)
source("~/DS 5220/Assignments/Assignment11/q6.R")
source("~/DS 5220/Assignments/Assignment11/q6.R")
r(2)
rep(1,10)
seq(1,4,by=0.25)
source("~/DS 5220/Assignments/Assignment11/q6.R")
source("~/DS 5220/Assignments/Assignment11/q6.R")
source("~/DS 5220/Assignments/Assignment11/q6.R")
source("~/DS 5220/Assignments/Assignment11/q6.R")
source("~/DS 5220/Assignments/Assignment11/q6.R")
source("~/DS 5220/Assignments/Assignment11/q6.R")
source("~/DS 5220/Assignments/Assignment11/q6.R")
source("~/DS 5220/Assignments/Assignment11/q6.R")
beta0
r(beta0)
source("~/DS 5220/Assignments/Assignment11/q6.R")
source("~/DS 5220/Assignments/Assignment11/q6.R")
beta0
r(beta0)
source("~/DS 5220/Assignments/Assignment11/q7.R")
source("~/DS 5220/Assignments/Assignment11/q7.R")
source("~/DS 5220/Assignments/Assignment11/q7.R")
View(default)
source("~/DS 5220/Assignments/Assignment11/q7.R")
View(default)
rep(0,10)
source("~/DS 5220/Assignments/Assignment11/q7.R")
View(default)
student_enc
student_enc[default$student == 'Yes']
student_enc[default$student == 'Yes'] <- 1
student_enc
source("~/DS 5220/Assignments/Assignment11/q7.R")
View(default)
View(default)
source("~/DS 5220/Assignments/Assignment11/q7.R")
default
View(default)
View(default)
source("~/DS 5220/Assignments/Assignment11/q7.R")
source("~/DS 5220/Assignments/Assignment11/q7.R")
log_pred
nrow(ntest)
length(ntest)
ntest
source("~/DS 5220/Assignments/Assignment11/q7.R")
log_pred
nrow(log_pred)
length(log_pred)
nrow(default[testid,])
source("~/DS 5220/Assignments/Assignment11/q7.R")
install.packages("keras")
source("~/DS 5220/Assignments/Assignment11/q7.R")
source("~/DS 5220/Assignments/Assignment11/q7.R")
source("~/DS 5220/Assignments/Assignment11/q7.R")
source("~/DS 5220/Assignments/Assignment11/q7.R")
install_tensorflow()
source("~/DS 5220/Assignments/Assignment11/q7.R")
keras::install_keras(backend = "tensorflow")
